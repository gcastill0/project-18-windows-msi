name: Build MSI

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  msi:
    runs-on: windows-latest
    env:
      APP_NAME: HelloApp
      CONFIG: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Bootstrap HelloApp if missing
        shell: pwsh
        run: |
          if (-not (Test-Path "HelloApp/HelloApp.csproj")) {
            New-Item -ItemType Directory -Force -Path "HelloApp" | Out-Null
            dotnet new console -n HelloApp -o HelloApp
          }

      - name: Restore and publish app
        run: |
          dotnet restore
          dotnet publish ./HelloApp/HelloApp.csproj -c $env:CONFIG -r win-x64 --self-contained true `
            -p:PublishSingleFile=true -p:PublishTrimmed=true -o dist

      # - name: Install WiX Toolset
      #   run: |
      #     choco install wixtoolset --version=3.14.0 -y --allow-downgrade
      #     echo "C:\Program Files (x86)\WiX Toolset v3.14\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Compile WiX
        working-directory: installer
        run: |
          $env:PublishDir="..\dist"
          candle.exe -dPublishDir=$env:PublishDir Product.wxs
          light.exe Product.wixobj -o "$env:APP_NAME.msi"
          Move-Item "$env:APP_NAME.msi" "..\$env:APP_NAME.msi"

      # - name: Optional code signing
      #   if: env.CERT_BASE64 && env.CERT_PASSWORD
      #   env:
      #     CERT_BASE64: ${{ secrets.CODE_SIGN_CERT_BASE64 }}
      #     CERT_PASSWORD: ${{ secrets.CODE_SIGN_PASSWORD }}
      #   run: |
      #     $pfx = "$env:RUNNER_TEMP\codesign.pfx"
      #     [IO.File]::WriteAllBytes($pfx, [Convert]::FromBase64String($env:CERT_BASE64))
      #     & "C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe" sign `
      #       /f $pfx /p $env:CERT_PASSWORD /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 `
      #       "$env:APP_NAME.msi"

      - name: SHA256 checksum
        run: certutil -hashfile "$env:APP_NAME.msi" SHA256 > "$env:APP_NAME.msi.sha256.txt"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: msi
          path: |
            HelloApp.msi
            HelloApp.msi.sha256.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            HelloApp.msi
            HelloApp.msi.sha256.txt
        env:
          GITHUB_TOKEN: ${{ secrets.MSIBUILDER_TOKEN }}
